"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/App.tsx":
/*!*********************!*\
  !*** ./app/App.tsx ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/liveblocks.config */ \"(app-pages-browser)/./liveblocks.config.ts\");\n/* harmony import */ var _lib_canvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/canvas */ \"(app-pages-browser)/./lib/canvas.ts\");\n/* harmony import */ var _lib_key_events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/key-events */ \"(app-pages-browser)/./lib/key-events.ts\");\n/* harmony import */ var _components_RightSideBar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/RightSideBar */ \"(app-pages-browser)/./components/RightSideBar.tsx\");\n/* harmony import */ var _lib_shapes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/shapes */ \"(app-pages-browser)/./lib/shapes.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/constants */ \"(app-pages-browser)/./constants/index.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst Home = ()=>{\n    _s();\n    /**\r\n   * useUndo and useRedo are hooks provided by Liveblocks that allow you to\r\n   * undo and redo mutations.\r\n   *\r\n   * useUndo: https://liveblocks.io/docs/api-reference/liveblocks-react#useUndo\r\n   * useRedo: https://liveblocks.io/docs/api-reference/liveblocks-react#useRedo\r\n   */ const undo = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useUndo)();\n    const redo = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useRedo)();\n    /**\r\n   * useStorage is a hook provided by Liveblocks that allows you to store\r\n   * data in a key-value store and automatically sync it with other users\r\n   * i.e., subscribes to updates to that selected data\r\n   *\r\n   * useStorage: https://liveblocks.io/docs/api-reference/liveblocks-react#useStorage\r\n   *\r\n   * Over here, we are storing the canvas objects in the key-value store.\r\n   */ const canvasObjects = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useStorage)((root)=>root.canvasObjects);\n    /**\r\n   * canvasRef is a reference to the canvas element that we'll use to initialize\r\n   * the fabric canvas.\r\n   *\r\n   * fabricRef is a reference to the fabric canvas that we use to perform\r\n   * operations on the canvas. It's a copy of the created canvas so we can use\r\n   * it outside the canvas event listeners.\r\n   */ const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fabricRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    /**\r\n   * isDrawing is a boolean that tells us if the user is drawing on the canvas.\r\n   * We use this to determine if the user is drawing or not\r\n   * i.e., if the freeform drawing mode is on or not.\r\n   */ const isDrawing = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    /**\r\n   * shapeRef is a reference to the shape that the user is currently drawing.\r\n   * We use this to update the shape's properties when the user is\r\n   * drawing/creating shape\r\n   */ const shapeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    /**\r\n   * selectedShapeRef is a reference to the shape that the user has selected.\r\n   * For example, if the user has selected the rectangle shape, then this will\r\n   * be set to \"rectangle\".\r\n   *\r\n   * We're using refs here because we want to access these variables inside the\r\n   * event listeners. We don't want to lose the values of these variables when\r\n   * the component re-renders. Refs help us with that.\r\n   */ const selectedShapeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    /**\r\n   * activeObjectRef is a reference to the active/selected object in the canvas\r\n   *\r\n   * We want to keep track of the active object so that we can keep it in\r\n   * selected form when user is editing the width, height, color etc\r\n   * properties/attributes of the object.\r\n   *\r\n   * Since we're using live storage to sync shapes across users in real-time,\r\n   * we have to re-render the canvas when the shapes are updated.\r\n   * Due to this re-render, the selected shape is lost. We want to keep track\r\n   * of the selected shape so that we can keep it selected when the\r\n   * canvas re-renders.\r\n   */ const activeObjectRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isEditingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    /**\r\n   * imageInputRef is a reference to the input element that we use to upload\r\n   * an image to the canvas.\r\n   *\r\n   * We want image upload to happen when clicked on the image item from the\r\n   * dropdown menu. So we're using this ref to trigger the click event on the\r\n   * input element when the user clicks on the image item from the dropdown.\r\n   */ const imageInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    /**\r\n   * activeElement is an object that contains the name, value and icon of the\r\n   * active element in the navbar.\r\n   */ const [activeElement, setActiveElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        name: \"\",\n        value: \"\",\n        icon: \"\"\n    });\n    /**\r\n   * elementAttributes is an object that contains the attributes of the selected\r\n   * element in the canvas.\r\n   *\r\n   * We use this to update the attributes of the selected element when the user\r\n   * is editing the width, height, color etc properties/attributes of the\r\n   * object.\r\n   */ const [elementAttributes, setElementAttributes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: \"\",\n        height: \"\",\n        fontSize: \"\",\n        fontFamily: \"\",\n        fontWeight: \"\",\n        fill: \"#aabbcc\",\n        stroke: \"#aabbcc\"\n    });\n    /**\r\n   * deleteShapeFromStorage is a mutation that deletes a shape from the\r\n   * key-value store of liveblocks.\r\n   * useMutation is a hook provided by Liveblocks that allows you to perform\r\n   * mutations on liveblocks data.\r\n   *\r\n   * useMutation: https://liveblocks.io/docs/api-reference/liveblocks-react#useMutation\r\n   * delete: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.delete\r\n   * get: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.get\r\n   *\r\n   * We're using this mutation to delete a shape from the key-value store when\r\n   * the user deletes a shape from the canvas.\r\n   */ const deleteShapeFromStorage = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation)((param, shapeId)=>{\n        let { storage } = param;\n        /**\r\n     * canvasObjects is a Map that contains all the shapes in the key-value.\r\n     * Like a store. We can create multiple stores in liveblocks.\r\n     *\r\n     * delete: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.delete\r\n     */ const canvasObjects = storage.get(\"canvasObjects\");\n        canvasObjects.delete(shapeId);\n    }, []);\n    /**\r\n   * deleteAllShapes is a mutation that deletes all the shapes from the\r\n   * key-value store of liveblocks.\r\n   *\r\n   * delete: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.delete\r\n   * get: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.get\r\n   *\r\n   * We're using this mutation to delete all the shapes from the key-value store when the user clicks on the reset button.\r\n   */ const deleteAllShapes = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation)((param)=>{\n        let { storage } = param;\n        // get the canvasObjects store\n        const canvasObjects = storage.get(\"canvasObjects\");\n        // if the store doesn't exist or is empty, return\n        if (!canvasObjects || canvasObjects.size === 0) return true;\n        // delete all the shapes from the store\n        for (const [key, value] of canvasObjects.entries()){\n            canvasObjects.delete(key);\n        }\n        // return true if the store is empty\n        return canvasObjects.size === 0;\n    }, []);\n    /**\r\n   * syncShapeInStorage is a mutation that syncs the shape in the key-value\r\n   * store of liveblocks.\r\n   *\r\n   * We're using this mutation to sync the shape in the key-value store\r\n   * whenever user performs any action on the canvas such as drawing, moving\r\n   * editing, deleting etc.\r\n   */ const syncShapeInStorage = (0,_liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation)((param, object)=>{\n        let { storage } = param;\n        // if the passed object is null, return\n        if (!object) return;\n        const { objectId } = object;\n        /**\r\n     * Turn Fabric object (kclass) into JSON format so that we can store it in the\r\n     * key-value store.\r\n     */ const shapeData = object.toJSON();\n        shapeData.objectId = objectId;\n        const canvasObjects = storage.get(\"canvasObjects\");\n        /**\r\n     * set is a method provided by Liveblocks that allows you to set a value\r\n     *\r\n     * set: https://liveblocks.io/docs/api-reference/liveblocks-client#LiveMap.set\r\n     */ canvasObjects.set(objectId, shapeData);\n    }, []);\n    /**\r\n   * Set the active element in the navbar and perform the action based\r\n   * on the selected element.\r\n   *\r\n   * @param elem\r\n   */ const handleActiveElement = (elem)=>{\n        setActiveElement(elem);\n        switch(elem === null || elem === void 0 ? void 0 : elem.value){\n            // delete all the shapes from the canvas\n            case \"reset\":\n                var // clear the canvas\n                _fabricRef_current;\n                // clear the storage\n                deleteAllShapes();\n                (_fabricRef_current = fabricRef.current) === null || _fabricRef_current === void 0 ? void 0 : _fabricRef_current.clear();\n                // set \"select\" as the active element\n                setActiveElement(_constants__WEBPACK_IMPORTED_MODULE_7__.defaultNavElement);\n                break;\n            // delete the selected shape from the canvas\n            case \"delete\":\n                // delete it from the canvas\n                (0,_lib_key_events__WEBPACK_IMPORTED_MODULE_4__.handleDelete)(fabricRef.current, deleteShapeFromStorage);\n                // set \"select\" as the active element\n                setActiveElement(_constants__WEBPACK_IMPORTED_MODULE_7__.defaultNavElement);\n                break;\n            // upload an image to the canvas\n            case \"image\":\n                var // trigger the click event on the input element which opens the file dialog\n                _imageInputRef_current;\n                (_imageInputRef_current = imageInputRef.current) === null || _imageInputRef_current === void 0 ? void 0 : _imageInputRef_current.click();\n                /**\r\n         * set drawing mode to false\r\n         * If the user is drawing on the canvas, we want to stop the\r\n         * drawing mode when clicked on the image item from the dropdown.\r\n         */ isDrawing.current = false;\n                if (fabricRef.current) {\n                    // disable the drawing mode of canvas\n                    fabricRef.current.isDrawingMode = false;\n                }\n                break;\n            // for comments, do nothing\n            case \"comments\":\n                break;\n            default:\n                // set the selected shape to the selected element\n                selectedShapeRef.current = elem === null || elem === void 0 ? void 0 : elem.value;\n                break;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // initialize the fabric canvas\n        const canvas = (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.initializeFabric)({\n            canvasRef,\n            fabricRef\n        });\n        /**\r\n     * listen to the mouse down event on the canvas which is fired when the\r\n     * user clicks on the canvas\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"mouse:down\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasMouseDown)({\n                options,\n                canvas,\n                selectedShapeRef,\n                isDrawing,\n                shapeRef\n            });\n        });\n        /**\r\n     * listen to the mouse move event on the canvas which is fired when the\r\n     * user moves the mouse on the canvas\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"mouse:move\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvaseMouseMove)({\n                options,\n                canvas,\n                isDrawing,\n                selectedShapeRef,\n                shapeRef,\n                syncShapeInStorage\n            });\n        });\n        /**\r\n     * listen to the mouse up event on the canvas which is fired when the\r\n     * user releases the mouse on the canvas\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"mouse:up\", ()=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasMouseUp)({\n                canvas,\n                isDrawing,\n                shapeRef,\n                activeObjectRef,\n                selectedShapeRef,\n                syncShapeInStorage,\n                setActiveElement\n            });\n        });\n        /**\r\n     * listen to the path created event on the canvas which is fired when\r\n     * the user creates a path on the canvas using the freeform drawing\r\n     * mode\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"path:created\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handlePathCreated)({\n                options,\n                syncShapeInStorage\n            });\n        });\n        /**\r\n     * listen to the object modified event on the canvas which is fired\r\n     * when the user modifies an object on the canvas. Basically, when the\r\n     * user changes the width, height, color etc properties/attributes of\r\n     * the object or moves the object on the canvas.\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"object:modified\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasObjectModified)({\n                options,\n                syncShapeInStorage\n            });\n        });\n        /**\r\n     * listen to the object moving event on the canvas which is fired\r\n     * when the user moves an object on the canvas.\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas === null || canvas === void 0 ? void 0 : canvas.on(\"object:moving\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasObjectMoving)({\n                options\n            });\n        });\n        /**\r\n     * listen to the selection created event on the canvas which is fired\r\n     * when the user selects an object on the canvas.\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"selection:created\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasSelectionCreated)({\n                options,\n                isEditingRef,\n                setElementAttributes\n            });\n        });\n        /**\r\n     * listen to the scaling event on the canvas which is fired when the\r\n     * user scales an object on the canvas.\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"object:scaling\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasObjectScaling)({\n                options,\n                setElementAttributes\n            });\n        });\n        /**\r\n     * listen to the mouse wheel event on the canvas which is fired when\r\n     * the user scrolls the mouse wheel on the canvas.\r\n     *\r\n     * Event inspector: http://fabricjs.com/events\r\n     * Event list: http://fabricjs.com/docs/fabric.Canvas.html#fire\r\n     */ canvas.on(\"mouse:wheel\", (options)=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleCanvasZoom)({\n                options,\n                canvas\n            });\n        });\n        /**\r\n     * listen to the resize event on the window which is fired when the\r\n     * user resizes the window.\r\n     *\r\n     * We're using this to resize the canvas when the user resizes the\r\n     * window.\r\n     */ window.addEventListener(\"resize\", ()=>{\n            (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleResize)({\n                canvas: fabricRef.current\n            });\n        });\n        /**\r\n     * listen to the key down event on the window which is fired when the\r\n     * user presses a key on the keyboard.\r\n     *\r\n     * We're using this to perform some actions like delete, copy, paste, etc when the user presses the respective keys on the keyboard.\r\n     */ window.addEventListener(\"keydown\", (e)=>(0,_lib_key_events__WEBPACK_IMPORTED_MODULE_4__.handleKeyDown)({\n                e,\n                canvas: fabricRef.current,\n                undo,\n                redo,\n                syncShapeInStorage,\n                deleteShapeFromStorage\n            }));\n        // dispose the canvas and remove the event listeners when the component unmounts\n        return ()=>{\n            /**\r\n       * dispose is a method provided by Fabric that allows you to dispose\r\n       * the canvas. It clears the canvas and removes all the event\r\n       * listeners\r\n       *\r\n       * dispose: http://fabricjs.com/docs/fabric.Canvas.html#dispose\r\n       */ canvas.dispose();\n            // remove the event listeners\n            window.removeEventListener(\"resize\", ()=>{\n                (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.handleResize)({\n                    canvas: null\n                });\n            });\n            window.removeEventListener(\"keydown\", (e)=>(0,_lib_key_events__WEBPACK_IMPORTED_MODULE_4__.handleKeyDown)({\n                    e,\n                    canvas: fabricRef.current,\n                    undo,\n                    redo,\n                    syncShapeInStorage,\n                    deleteShapeFromStorage\n                }));\n        };\n    }, [\n        canvasRef\n    ]); // run this effect only once when the component mounts and the canvasRef changes\n    // render the canvas when the canvasObjects from live storage changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_lib_canvas__WEBPACK_IMPORTED_MODULE_3__.renderCanvas)({\n            fabricRef,\n            canvasObjects,\n            activeObjectRef\n        });\n    }, [\n        canvasObjects\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"h-screen overflow-hidden\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Navbar, {\n                imageInputRef: imageInputRef,\n                activeElement: activeElement,\n                handleImageUpload: (e)=>{\n                    // prevent the default behavior of the input element\n                    e.stopPropagation();\n                    (0,_lib_shapes__WEBPACK_IMPORTED_MODULE_6__.handleImageUpload)({\n                        file: e.target.files[0],\n                        canvas: fabricRef,\n                        shapeRef,\n                        syncShapeInStorage\n                    });\n                },\n                handleActiveElement: handleActiveElement\n            }, void 0, false, {\n                fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n                lineNumber: 494,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: \"flex h-full flex-row\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LeftSidebar, {\n                        allShapes: Array.from(canvasObjects)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n                        lineNumber: 512,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Live, {\n                        canvasRef: canvasRef,\n                        undo: undo,\n                        redo: redo\n                    }, void 0, false, {\n                        fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n                        lineNumber: 514,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_RightSideBar__WEBPACK_IMPORTED_MODULE_5__.RightSidebar, {\n                        elementAttributes: elementAttributes,\n                        setElementAttributes: setElementAttributes,\n                        fabricRef: fabricRef,\n                        isEditingRef: isEditingRef,\n                        activeObjectRef: activeObjectRef,\n                        syncShapeInStorage: syncShapeInStorage\n                    }, void 0, false, {\n                        fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n                        lineNumber: 516,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n                lineNumber: 511,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\beshoy's figma\\\\app\\\\App.tsx\",\n        lineNumber: 493,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Home, \"fgH2qXwa63KfE9G0+/eUDe8cfuw=\", false, function() {\n    return [\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useUndo,\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useRedo,\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useStorage,\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation,\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation,\n        _liveblocks_config__WEBPACK_IMPORTED_MODULE_2__.useMutation\n    ];\n});\n_c = Home;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Qyw4REFBQ2lFO3dCQUFLL0QsV0FBV0E7d0JBQVdKLE1BQU1BO3dCQUFNQyxNQUFNQTs7Ozs7O2tDQUU5Qyw4REFBQ0wsa0VBQVlBO3dCQUNYcUIsbUJBQW1CQTt3QkFDbkJDLHNCQUFzQkE7d0JBQ3RCYixXQUFXQTt3QkFDWEssY0FBY0E7d0JBQ2RELGlCQUFpQkE7d0JBQ2pCMEIsb0JBQW9CQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSzlCO0dBbmZNcEM7O1FBUVNsQix1REFBT0E7UUFDUEYsdURBQU9BO1FBV0VDLDBEQUFVQTtRQXlHREYsMkRBQVdBO1FBb0JsQkEsMkRBQVdBO1FBd0JSQSwyREFBV0E7OztLQXpLbENxQjtBQXFmTiwrREFBZUEsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvQXBwLnRzeD9kNjA5Il0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5cInVzZSBjbGllbnRcIjtcclxuXHJcbmltcG9ydCB7IGZhYnJpYyB9IGZyb20gXCJmYWJyaWNcIjtcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VNdXRhdGlvbiwgdXNlUmVkbywgdXNlU3RvcmFnZSwgdXNlVW5kbyB9IGZyb20gXCJAL2xpdmVibG9ja3MuY29uZmlnXCI7XHJcbmltcG9ydCB7XHJcbiAgaGFuZGxlQ2FudmFzZU1vdXNlTW92ZSxcclxuICBoYW5kbGVDYW52YXNNb3VzZURvd24sXHJcbiAgaGFuZGxlQ2FudmFzTW91c2VVcCxcclxuICBoYW5kbGVDYW52YXNPYmplY3RNb2RpZmllZCxcclxuICBoYW5kbGVDYW52YXNPYmplY3RNb3ZpbmcsXHJcbiAgaGFuZGxlQ2FudmFzT2JqZWN0U2NhbGluZyxcclxuICBoYW5kbGVDYW52YXNTZWxlY3Rpb25DcmVhdGVkLFxyXG4gIGhhbmRsZUNhbnZhc1pvb20sXHJcbiAgaGFuZGxlUGF0aENyZWF0ZWQsXHJcbiAgaGFuZGxlUmVzaXplLFxyXG4gIGluaXRpYWxpemVGYWJyaWMsXHJcbiAgcmVuZGVyQ2FudmFzLFxyXG59IGZyb20gXCJAL2xpYi9jYW52YXNcIjtcclxuaW1wb3J0IHsgaGFuZGxlRGVsZXRlLCBoYW5kbGVLZXlEb3duIH0gZnJvbSBcIkAvbGliL2tleS1ldmVudHNcIjtcclxuaW1wb3J0IHtSaWdodFNpZGViYXJ9IGZyb20gXCIuLi9jb21wb25lbnRzL1JpZ2h0U2lkZUJhclwiO1xyXG5pbXBvcnQgeyBoYW5kbGVJbWFnZVVwbG9hZCB9IGZyb20gXCJAL2xpYi9zaGFwZXNcIjtcclxuaW1wb3J0IHsgZGVmYXVsdE5hdkVsZW1lbnQgfSBmcm9tIFwiQC9jb25zdGFudHNcIjtcclxuaW1wb3J0IHsgQWN0aXZlRWxlbWVudCwgQXR0cmlidXRlcyB9IGZyb20gXCJAL3R5cGVzL3R5cGVcIjtcclxuXHJcbmNvbnN0IEhvbWUgPSAoKSA9PiB7XHJcbiAgLyoqXHJcbiAgICogdXNlVW5kbyBhbmQgdXNlUmVkbyBhcmUgaG9va3MgcHJvdmlkZWQgYnkgTGl2ZWJsb2NrcyB0aGF0IGFsbG93IHlvdSB0b1xyXG4gICAqIHVuZG8gYW5kIHJlZG8gbXV0YXRpb25zLlxyXG4gICAqXHJcbiAgICogdXNlVW5kbzogaHR0cHM6Ly9saXZlYmxvY2tzLmlvL2RvY3MvYXBpLXJlZmVyZW5jZS9saXZlYmxvY2tzLXJlYWN0I3VzZVVuZG9cclxuICAgKiB1c2VSZWRvOiBodHRwczovL2xpdmVibG9ja3MuaW8vZG9jcy9hcGktcmVmZXJlbmNlL2xpdmVibG9ja3MtcmVhY3QjdXNlUmVkb1xyXG4gICAqL1xyXG4gIGNvbnN0IHVuZG8gPSB1c2VVbmRvKCk7XHJcbiAgY29uc3QgcmVkbyA9IHVzZVJlZG8oKTtcclxuXHJcbiAgLyoqXHJcbiAgICogdXNlU3RvcmFnZSBpcyBhIGhvb2sgcHJvdmlkZWQgYnkgTGl2ZWJsb2NrcyB0aGF0IGFsbG93cyB5b3UgdG8gc3RvcmVcclxuICAgKiBkYXRhIGluIGEga2V5LXZhbHVlIHN0b3JlIGFuZCBhdXRvbWF0aWNhbGx5IHN5bmMgaXQgd2l0aCBvdGhlciB1c2Vyc1xyXG4gICAqIGkuZS4sIHN1YnNjcmliZXMgdG8gdXBkYXRlcyB0byB0aGF0IHNlbGVjdGVkIGRhdGFcclxuICAgKlxyXG4gICAqIHVzZVN0b3JhZ2U6IGh0dHBzOi8vbGl2ZWJsb2Nrcy5pby9kb2NzL2FwaS1yZWZlcmVuY2UvbGl2ZWJsb2Nrcy1yZWFjdCN1c2VTdG9yYWdlXHJcbiAgICpcclxuICAgKiBPdmVyIGhlcmUsIHdlIGFyZSBzdG9yaW5nIHRoZSBjYW52YXMgb2JqZWN0cyBpbiB0aGUga2V5LXZhbHVlIHN0b3JlLlxyXG4gICAqL1xyXG4gIGNvbnN0IGNhbnZhc09iamVjdHMgPSB1c2VTdG9yYWdlKChyb290KSA9PiByb290LmNhbnZhc09iamVjdHMpO1xyXG5cclxuICAvKipcclxuICAgKiBjYW52YXNSZWYgaXMgYSByZWZlcmVuY2UgdG8gdGhlIGNhbnZhcyBlbGVtZW50IHRoYXQgd2UnbGwgdXNlIHRvIGluaXRpYWxpemVcclxuICAgKiB0aGUgZmFicmljIGNhbnZhcy5cclxuICAgKlxyXG4gICAqIGZhYnJpY1JlZiBpcyBhIHJlZmVyZW5jZSB0byB0aGUgZmFicmljIGNhbnZhcyB0aGF0IHdlIHVzZSB0byBwZXJmb3JtXHJcbiAgICogb3BlcmF0aW9ucyBvbiB0aGUgY2FudmFzLiBJdCdzIGEgY29weSBvZiB0aGUgY3JlYXRlZCBjYW52YXMgc28gd2UgY2FuIHVzZVxyXG4gICAqIGl0IG91dHNpZGUgdGhlIGNhbnZhcyBldmVudCBsaXN0ZW5lcnMuXHJcbiAgICovXHJcbiAgY29uc3QgY2FudmFzUmVmID0gdXNlUmVmPEhUTUxDYW52YXNFbGVtZW50PihudWxsKTtcclxuICBjb25zdCBmYWJyaWNSZWYgPSB1c2VSZWY8ZmFicmljLkNhbnZhcyB8IG51bGw+KG51bGwpO1xyXG5cclxuICAvKipcclxuICAgKiBpc0RyYXdpbmcgaXMgYSBib29sZWFuIHRoYXQgdGVsbHMgdXMgaWYgdGhlIHVzZXIgaXMgZHJhd2luZyBvbiB0aGUgY2FudmFzLlxyXG4gICAqIFdlIHVzZSB0aGlzIHRvIGRldGVybWluZSBpZiB0aGUgdXNlciBpcyBkcmF3aW5nIG9yIG5vdFxyXG4gICAqIGkuZS4sIGlmIHRoZSBmcmVlZm9ybSBkcmF3aW5nIG1vZGUgaXMgb24gb3Igbm90LlxyXG4gICAqL1xyXG4gIGNvbnN0IGlzRHJhd2luZyA9IHVzZVJlZihmYWxzZSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIHNoYXBlUmVmIGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBzaGFwZSB0aGF0IHRoZSB1c2VyIGlzIGN1cnJlbnRseSBkcmF3aW5nLlxyXG4gICAqIFdlIHVzZSB0aGlzIHRvIHVwZGF0ZSB0aGUgc2hhcGUncyBwcm9wZXJ0aWVzIHdoZW4gdGhlIHVzZXIgaXNcclxuICAgKiBkcmF3aW5nL2NyZWF0aW5nIHNoYXBlXHJcbiAgICovXHJcbiAgY29uc3Qgc2hhcGVSZWYgPSB1c2VSZWY8ZmFicmljLk9iamVjdCB8IG51bGw+KG51bGwpO1xyXG5cclxuICAvKipcclxuICAgKiBzZWxlY3RlZFNoYXBlUmVmIGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBzaGFwZSB0aGF0IHRoZSB1c2VyIGhhcyBzZWxlY3RlZC5cclxuICAgKiBGb3IgZXhhbXBsZSwgaWYgdGhlIHVzZXIgaGFzIHNlbGVjdGVkIHRoZSByZWN0YW5nbGUgc2hhcGUsIHRoZW4gdGhpcyB3aWxsXHJcbiAgICogYmUgc2V0IHRvIFwicmVjdGFuZ2xlXCIuXHJcbiAgICpcclxuICAgKiBXZSdyZSB1c2luZyByZWZzIGhlcmUgYmVjYXVzZSB3ZSB3YW50IHRvIGFjY2VzcyB0aGVzZSB2YXJpYWJsZXMgaW5zaWRlIHRoZVxyXG4gICAqIGV2ZW50IGxpc3RlbmVycy4gV2UgZG9uJ3Qgd2FudCB0byBsb3NlIHRoZSB2YWx1ZXMgb2YgdGhlc2UgdmFyaWFibGVzIHdoZW5cclxuICAgKiB0aGUgY29tcG9uZW50IHJlLXJlbmRlcnMuIFJlZnMgaGVscCB1cyB3aXRoIHRoYXQuXHJcbiAgICovXHJcbiAgY29uc3Qgc2VsZWN0ZWRTaGFwZVJlZiA9IHVzZVJlZjxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuXHJcbiAgLyoqXHJcbiAgICogYWN0aXZlT2JqZWN0UmVmIGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBhY3RpdmUvc2VsZWN0ZWQgb2JqZWN0IGluIHRoZSBjYW52YXNcclxuICAgKlxyXG4gICAqIFdlIHdhbnQgdG8ga2VlcCB0cmFjayBvZiB0aGUgYWN0aXZlIG9iamVjdCBzbyB0aGF0IHdlIGNhbiBrZWVwIGl0IGluXHJcbiAgICogc2VsZWN0ZWQgZm9ybSB3aGVuIHVzZXIgaXMgZWRpdGluZyB0aGUgd2lkdGgsIGhlaWdodCwgY29sb3IgZXRjXHJcbiAgICogcHJvcGVydGllcy9hdHRyaWJ1dGVzIG9mIHRoZSBvYmplY3QuXHJcbiAgICpcclxuICAgKiBTaW5jZSB3ZSdyZSB1c2luZyBsaXZlIHN0b3JhZ2UgdG8gc3luYyBzaGFwZXMgYWNyb3NzIHVzZXJzIGluIHJlYWwtdGltZSxcclxuICAgKiB3ZSBoYXZlIHRvIHJlLXJlbmRlciB0aGUgY2FudmFzIHdoZW4gdGhlIHNoYXBlcyBhcmUgdXBkYXRlZC5cclxuICAgKiBEdWUgdG8gdGhpcyByZS1yZW5kZXIsIHRoZSBzZWxlY3RlZCBzaGFwZSBpcyBsb3N0LiBXZSB3YW50IHRvIGtlZXAgdHJhY2tcclxuICAgKiBvZiB0aGUgc2VsZWN0ZWQgc2hhcGUgc28gdGhhdCB3ZSBjYW4ga2VlcCBpdCBzZWxlY3RlZCB3aGVuIHRoZVxyXG4gICAqIGNhbnZhcyByZS1yZW5kZXJzLlxyXG4gICAqL1xyXG4gIGNvbnN0IGFjdGl2ZU9iamVjdFJlZiA9IHVzZVJlZjxmYWJyaWMuT2JqZWN0IHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgaXNFZGl0aW5nUmVmID0gdXNlUmVmKGZhbHNlKTtcclxuXHJcbiAgLyoqXHJcbiAgICogaW1hZ2VJbnB1dFJlZiBpcyBhIHJlZmVyZW5jZSB0byB0aGUgaW5wdXQgZWxlbWVudCB0aGF0IHdlIHVzZSB0byB1cGxvYWRcclxuICAgKiBhbiBpbWFnZSB0byB0aGUgY2FudmFzLlxyXG4gICAqXHJcbiAgICogV2Ugd2FudCBpbWFnZSB1cGxvYWQgdG8gaGFwcGVuIHdoZW4gY2xpY2tlZCBvbiB0aGUgaW1hZ2UgaXRlbSBmcm9tIHRoZVxyXG4gICAqIGRyb3Bkb3duIG1lbnUuIFNvIHdlJ3JlIHVzaW5nIHRoaXMgcmVmIHRvIHRyaWdnZXIgdGhlIGNsaWNrIGV2ZW50IG9uIHRoZVxyXG4gICAqIGlucHV0IGVsZW1lbnQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGltYWdlIGl0ZW0gZnJvbSB0aGUgZHJvcGRvd24uXHJcbiAgICovXHJcbiAgY29uc3QgaW1hZ2VJbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcclxuXHJcbiAgLyoqXHJcbiAgICogYWN0aXZlRWxlbWVudCBpcyBhbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGUgbmFtZSwgdmFsdWUgYW5kIGljb24gb2YgdGhlXHJcbiAgICogYWN0aXZlIGVsZW1lbnQgaW4gdGhlIG5hdmJhci5cclxuICAgKi9cclxuICBjb25zdCBbYWN0aXZlRWxlbWVudCwgc2V0QWN0aXZlRWxlbWVudF0gPSB1c2VTdGF0ZTxBY3RpdmVFbGVtZW50Pih7XHJcbiAgICBuYW1lOiBcIlwiLFxyXG4gICAgdmFsdWU6IFwiXCIsXHJcbiAgICBpY29uOiBcIlwiLFxyXG4gIH0pO1xyXG5cclxuICAvKipcclxuICAgKiBlbGVtZW50QXR0cmlidXRlcyBpcyBhbiBvYmplY3QgdGhhdCBjb250YWlucyB0aGUgYXR0cmlidXRlcyBvZiB0aGUgc2VsZWN0ZWRcclxuICAgKiBlbGVtZW50IGluIHRoZSBjYW52YXMuXHJcbiAgICpcclxuICAgKiBXZSB1c2UgdGhpcyB0byB1cGRhdGUgdGhlIGF0dHJpYnV0ZXMgb2YgdGhlIHNlbGVjdGVkIGVsZW1lbnQgd2hlbiB0aGUgdXNlclxyXG4gICAqIGlzIGVkaXRpbmcgdGhlIHdpZHRoLCBoZWlnaHQsIGNvbG9yIGV0YyBwcm9wZXJ0aWVzL2F0dHJpYnV0ZXMgb2YgdGhlXHJcbiAgICogb2JqZWN0LlxyXG4gICAqL1xyXG4gIGNvbnN0IFtlbGVtZW50QXR0cmlidXRlcywgc2V0RWxlbWVudEF0dHJpYnV0ZXNdID0gdXNlU3RhdGU8QXR0cmlidXRlcz4oe1xyXG4gICAgd2lkdGg6IFwiXCIsXHJcbiAgICBoZWlnaHQ6IFwiXCIsXHJcbiAgICBmb250U2l6ZTogXCJcIixcclxuICAgIGZvbnRGYW1pbHk6IFwiXCIsXHJcbiAgICBmb250V2VpZ2h0OiBcIlwiLFxyXG4gICAgZmlsbDogXCIjYWFiYmNjXCIsXHJcbiAgICBzdHJva2U6IFwiI2FhYmJjY1wiLFxyXG4gIH0pO1xyXG5cclxuICAvKipcclxuICAgKiBkZWxldGVTaGFwZUZyb21TdG9yYWdlIGlzIGEgbXV0YXRpb24gdGhhdCBkZWxldGVzIGEgc2hhcGUgZnJvbSB0aGVcclxuICAgKiBrZXktdmFsdWUgc3RvcmUgb2YgbGl2ZWJsb2Nrcy5cclxuICAgKiB1c2VNdXRhdGlvbiBpcyBhIGhvb2sgcHJvdmlkZWQgYnkgTGl2ZWJsb2NrcyB0aGF0IGFsbG93cyB5b3UgdG8gcGVyZm9ybVxyXG4gICAqIG11dGF0aW9ucyBvbiBsaXZlYmxvY2tzIGRhdGEuXHJcbiAgICpcclxuICAgKiB1c2VNdXRhdGlvbjogaHR0cHM6Ly9saXZlYmxvY2tzLmlvL2RvY3MvYXBpLXJlZmVyZW5jZS9saXZlYmxvY2tzLXJlYWN0I3VzZU11dGF0aW9uXHJcbiAgICogZGVsZXRlOiBodHRwczovL2xpdmVibG9ja3MuaW8vZG9jcy9hcGktcmVmZXJlbmNlL2xpdmVibG9ja3MtY2xpZW50I0xpdmVNYXAuZGVsZXRlXHJcbiAgICogZ2V0OiBodHRwczovL2xpdmVibG9ja3MuaW8vZG9jcy9hcGktcmVmZXJlbmNlL2xpdmVibG9ja3MtY2xpZW50I0xpdmVNYXAuZ2V0XHJcbiAgICpcclxuICAgKiBXZSdyZSB1c2luZyB0aGlzIG11dGF0aW9uIHRvIGRlbGV0ZSBhIHNoYXBlIGZyb20gdGhlIGtleS12YWx1ZSBzdG9yZSB3aGVuXHJcbiAgICogdGhlIHVzZXIgZGVsZXRlcyBhIHNoYXBlIGZyb20gdGhlIGNhbnZhcy5cclxuICAgKi9cclxuICBjb25zdCBkZWxldGVTaGFwZUZyb21TdG9yYWdlID0gdXNlTXV0YXRpb24oKHsgc3RvcmFnZSB9LCBzaGFwZUlkKSA9PiB7XHJcbiAgICAvKipcclxuICAgICAqIGNhbnZhc09iamVjdHMgaXMgYSBNYXAgdGhhdCBjb250YWlucyBhbGwgdGhlIHNoYXBlcyBpbiB0aGUga2V5LXZhbHVlLlxyXG4gICAgICogTGlrZSBhIHN0b3JlLiBXZSBjYW4gY3JlYXRlIG11bHRpcGxlIHN0b3JlcyBpbiBsaXZlYmxvY2tzLlxyXG4gICAgICpcclxuICAgICAqIGRlbGV0ZTogaHR0cHM6Ly9saXZlYmxvY2tzLmlvL2RvY3MvYXBpLXJlZmVyZW5jZS9saXZlYmxvY2tzLWNsaWVudCNMaXZlTWFwLmRlbGV0ZVxyXG4gICAgICovXHJcbiAgICBjb25zdCBjYW52YXNPYmplY3RzID0gc3RvcmFnZS5nZXQoXCJjYW52YXNPYmplY3RzXCIpO1xyXG4gICAgY2FudmFzT2JqZWN0cy5kZWxldGUoc2hhcGVJZCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICAvKipcclxuICAgKiBkZWxldGVBbGxTaGFwZXMgaXMgYSBtdXRhdGlvbiB0aGF0IGRlbGV0ZXMgYWxsIHRoZSBzaGFwZXMgZnJvbSB0aGVcclxuICAgKiBrZXktdmFsdWUgc3RvcmUgb2YgbGl2ZWJsb2Nrcy5cclxuICAgKlxyXG4gICAqIGRlbGV0ZTogaHR0cHM6Ly9saXZlYmxvY2tzLmlvL2RvY3MvYXBpLXJlZmVyZW5jZS9saXZlYmxvY2tzLWNsaWVudCNMaXZlTWFwLmRlbGV0ZVxyXG4gICAqIGdldDogaHR0cHM6Ly9saXZlYmxvY2tzLmlvL2RvY3MvYXBpLXJlZmVyZW5jZS9saXZlYmxvY2tzLWNsaWVudCNMaXZlTWFwLmdldFxyXG4gICAqXHJcbiAgICogV2UncmUgdXNpbmcgdGhpcyBtdXRhdGlvbiB0byBkZWxldGUgYWxsIHRoZSBzaGFwZXMgZnJvbSB0aGUga2V5LXZhbHVlIHN0b3JlIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSByZXNldCBidXR0b24uXHJcbiAgICovXHJcbiAgY29uc3QgZGVsZXRlQWxsU2hhcGVzID0gdXNlTXV0YXRpb24oKHsgc3RvcmFnZSB9KSA9PiB7XHJcbiAgICAvLyBnZXQgdGhlIGNhbnZhc09iamVjdHMgc3RvcmVcclxuICAgIGNvbnN0IGNhbnZhc09iamVjdHMgPSBzdG9yYWdlLmdldChcImNhbnZhc09iamVjdHNcIik7XHJcblxyXG4gICAgLy8gaWYgdGhlIHN0b3JlIGRvZXNuJ3QgZXhpc3Qgb3IgaXMgZW1wdHksIHJldHVyblxyXG4gICAgaWYgKCFjYW52YXNPYmplY3RzIHx8IGNhbnZhc09iamVjdHMuc2l6ZSA9PT0gMCkgcmV0dXJuIHRydWU7XHJcblxyXG4gICAgLy8gZGVsZXRlIGFsbCB0aGUgc2hhcGVzIGZyb20gdGhlIHN0b3JlXHJcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBjYW52YXNPYmplY3RzLmVudHJpZXMoKSkge1xyXG4gICAgICBjYW52YXNPYmplY3RzLmRlbGV0ZShrZXkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHJldHVybiB0cnVlIGlmIHRoZSBzdG9yZSBpcyBlbXB0eVxyXG4gICAgcmV0dXJuIGNhbnZhc09iamVjdHMuc2l6ZSA9PT0gMDtcclxuICB9LCBbXSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIHN5bmNTaGFwZUluU3RvcmFnZSBpcyBhIG11dGF0aW9uIHRoYXQgc3luY3MgdGhlIHNoYXBlIGluIHRoZSBrZXktdmFsdWVcclxuICAgKiBzdG9yZSBvZiBsaXZlYmxvY2tzLlxyXG4gICAqXHJcbiAgICogV2UncmUgdXNpbmcgdGhpcyBtdXRhdGlvbiB0byBzeW5jIHRoZSBzaGFwZSBpbiB0aGUga2V5LXZhbHVlIHN0b3JlXHJcbiAgICogd2hlbmV2ZXIgdXNlciBwZXJmb3JtcyBhbnkgYWN0aW9uIG9uIHRoZSBjYW52YXMgc3VjaCBhcyBkcmF3aW5nLCBtb3ZpbmdcclxuICAgKiBlZGl0aW5nLCBkZWxldGluZyBldGMuXHJcbiAgICovXHJcbiAgY29uc3Qgc3luY1NoYXBlSW5TdG9yYWdlID0gdXNlTXV0YXRpb24oKHsgc3RvcmFnZSB9LCBvYmplY3QpID0+IHtcclxuICAgIC8vIGlmIHRoZSBwYXNzZWQgb2JqZWN0IGlzIG51bGwsIHJldHVyblxyXG4gICAgaWYgKCFvYmplY3QpIHJldHVybjtcclxuICAgIGNvbnN0IHsgb2JqZWN0SWQgfSA9IG9iamVjdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFR1cm4gRmFicmljIG9iamVjdCAoa2NsYXNzKSBpbnRvIEpTT04gZm9ybWF0IHNvIHRoYXQgd2UgY2FuIHN0b3JlIGl0IGluIHRoZVxyXG4gICAgICoga2V5LXZhbHVlIHN0b3JlLlxyXG4gICAgICovXHJcbiAgICBjb25zdCBzaGFwZURhdGEgPSBvYmplY3QudG9KU09OKCk7XHJcbiAgICBzaGFwZURhdGEub2JqZWN0SWQgPSBvYmplY3RJZDtcclxuXHJcbiAgICBjb25zdCBjYW52YXNPYmplY3RzID0gc3RvcmFnZS5nZXQoXCJjYW52YXNPYmplY3RzXCIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBzZXQgaXMgYSBtZXRob2QgcHJvdmlkZWQgYnkgTGl2ZWJsb2NrcyB0aGF0IGFsbG93cyB5b3UgdG8gc2V0IGEgdmFsdWVcclxuICAgICAqXHJcbiAgICAgKiBzZXQ6IGh0dHBzOi8vbGl2ZWJsb2Nrcy5pby9kb2NzL2FwaS1yZWZlcmVuY2UvbGl2ZWJsb2Nrcy1jbGllbnQjTGl2ZU1hcC5zZXRcclxuICAgICAqL1xyXG4gICAgY2FudmFzT2JqZWN0cy5zZXQob2JqZWN0SWQsIHNoYXBlRGF0YSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICAvKipcclxuICAgKiBTZXQgdGhlIGFjdGl2ZSBlbGVtZW50IGluIHRoZSBuYXZiYXIgYW5kIHBlcmZvcm0gdGhlIGFjdGlvbiBiYXNlZFxyXG4gICAqIG9uIHRoZSBzZWxlY3RlZCBlbGVtZW50LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGVsZW1cclxuICAgKi9cclxuICBjb25zdCBoYW5kbGVBY3RpdmVFbGVtZW50ID0gKGVsZW06IEFjdGl2ZUVsZW1lbnQpID0+IHtcclxuICAgIHNldEFjdGl2ZUVsZW1lbnQoZWxlbSk7XHJcblxyXG4gICAgc3dpdGNoIChlbGVtPy52YWx1ZSkge1xyXG4gICAgICAvLyBkZWxldGUgYWxsIHRoZSBzaGFwZXMgZnJvbSB0aGUgY2FudmFzXHJcbiAgICAgIGNhc2UgXCJyZXNldFwiOlxyXG4gICAgICAgIC8vIGNsZWFyIHRoZSBzdG9yYWdlXHJcbiAgICAgICAgZGVsZXRlQWxsU2hhcGVzKCk7XHJcbiAgICAgICAgLy8gY2xlYXIgdGhlIGNhbnZhc1xyXG4gICAgICAgIGZhYnJpY1JlZi5jdXJyZW50Py5jbGVhcigpO1xyXG4gICAgICAgIC8vIHNldCBcInNlbGVjdFwiIGFzIHRoZSBhY3RpdmUgZWxlbWVudFxyXG4gICAgICAgIHNldEFjdGl2ZUVsZW1lbnQoZGVmYXVsdE5hdkVsZW1lbnQpO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgLy8gZGVsZXRlIHRoZSBzZWxlY3RlZCBzaGFwZSBmcm9tIHRoZSBjYW52YXNcclxuICAgICAgY2FzZSBcImRlbGV0ZVwiOlxyXG4gICAgICAgIC8vIGRlbGV0ZSBpdCBmcm9tIHRoZSBjYW52YXNcclxuICAgICAgICBoYW5kbGVEZWxldGUoZmFicmljUmVmLmN1cnJlbnQgYXMgYW55LCBkZWxldGVTaGFwZUZyb21TdG9yYWdlKTtcclxuICAgICAgICAvLyBzZXQgXCJzZWxlY3RcIiBhcyB0aGUgYWN0aXZlIGVsZW1lbnRcclxuICAgICAgICBzZXRBY3RpdmVFbGVtZW50KGRlZmF1bHROYXZFbGVtZW50KTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIC8vIHVwbG9hZCBhbiBpbWFnZSB0byB0aGUgY2FudmFzXHJcbiAgICAgIGNhc2UgXCJpbWFnZVwiOlxyXG4gICAgICAgIC8vIHRyaWdnZXIgdGhlIGNsaWNrIGV2ZW50IG9uIHRoZSBpbnB1dCBlbGVtZW50IHdoaWNoIG9wZW5zIHRoZSBmaWxlIGRpYWxvZ1xyXG4gICAgICAgIGltYWdlSW5wdXRSZWYuY3VycmVudD8uY2xpY2soKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBzZXQgZHJhd2luZyBtb2RlIHRvIGZhbHNlXHJcbiAgICAgICAgICogSWYgdGhlIHVzZXIgaXMgZHJhd2luZyBvbiB0aGUgY2FudmFzLCB3ZSB3YW50IHRvIHN0b3AgdGhlXHJcbiAgICAgICAgICogZHJhd2luZyBtb2RlIHdoZW4gY2xpY2tlZCBvbiB0aGUgaW1hZ2UgaXRlbSBmcm9tIHRoZSBkcm9wZG93bi5cclxuICAgICAgICAgKi9cclxuICAgICAgICBpc0RyYXdpbmcuY3VycmVudCA9IGZhbHNlO1xyXG5cclxuICAgICAgICBpZiAoZmFicmljUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgIC8vIGRpc2FibGUgdGhlIGRyYXdpbmcgbW9kZSBvZiBjYW52YXNcclxuICAgICAgICAgIGZhYnJpY1JlZi5jdXJyZW50LmlzRHJhd2luZ01vZGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAvLyBmb3IgY29tbWVudHMsIGRvIG5vdGhpbmdcclxuICAgICAgY2FzZSBcImNvbW1lbnRzXCI6XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIC8vIHNldCB0aGUgc2VsZWN0ZWQgc2hhcGUgdG8gdGhlIHNlbGVjdGVkIGVsZW1lbnRcclxuICAgICAgICBzZWxlY3RlZFNoYXBlUmVmLmN1cnJlbnQgPSBlbGVtPy52YWx1ZSBhcyBzdHJpbmc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIC8vIGluaXRpYWxpemUgdGhlIGZhYnJpYyBjYW52YXNcclxuICAgIGNvbnN0IGNhbnZhcyA9IGluaXRpYWxpemVGYWJyaWMoe1xyXG4gICAgICBjYW52YXNSZWYsXHJcbiAgICAgIGZhYnJpY1JlZixcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogbGlzdGVuIHRvIHRoZSBtb3VzZSBkb3duIGV2ZW50IG9uIHRoZSBjYW52YXMgd2hpY2ggaXMgZmlyZWQgd2hlbiB0aGVcclxuICAgICAqIHVzZXIgY2xpY2tzIG9uIHRoZSBjYW52YXNcclxuICAgICAqXHJcbiAgICAgKiBFdmVudCBpbnNwZWN0b3I6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZXZlbnRzXHJcbiAgICAgKiBFdmVudCBsaXN0OiBodHRwOi8vZmFicmljanMuY29tL2RvY3MvZmFicmljLkNhbnZhcy5odG1sI2ZpcmVcclxuICAgICAqL1xyXG4gICAgY2FudmFzLm9uKFwibW91c2U6ZG93blwiLCAob3B0aW9ucykgPT4ge1xyXG4gICAgICBoYW5kbGVDYW52YXNNb3VzZURvd24oe1xyXG4gICAgICAgIG9wdGlvbnMsXHJcbiAgICAgICAgY2FudmFzLFxyXG4gICAgICAgIHNlbGVjdGVkU2hhcGVSZWYsXHJcbiAgICAgICAgaXNEcmF3aW5nLFxyXG4gICAgICAgIHNoYXBlUmVmLFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogbGlzdGVuIHRvIHRoZSBtb3VzZSBtb3ZlIGV2ZW50IG9uIHRoZSBjYW52YXMgd2hpY2ggaXMgZmlyZWQgd2hlbiB0aGVcclxuICAgICAqIHVzZXIgbW92ZXMgdGhlIG1vdXNlIG9uIHRoZSBjYW52YXNcclxuICAgICAqXHJcbiAgICAgKiBFdmVudCBpbnNwZWN0b3I6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZXZlbnRzXHJcbiAgICAgKiBFdmVudCBsaXN0OiBodHRwOi8vZmFicmljanMuY29tL2RvY3MvZmFicmljLkNhbnZhcy5odG1sI2ZpcmVcclxuICAgICAqL1xyXG4gICAgY2FudmFzLm9uKFwibW91c2U6bW92ZVwiLCAob3B0aW9ucykgPT4ge1xyXG4gICAgICBoYW5kbGVDYW52YXNlTW91c2VNb3ZlKHtcclxuICAgICAgICBvcHRpb25zLFxyXG4gICAgICAgIGNhbnZhcyxcclxuICAgICAgICBpc0RyYXdpbmcsXHJcbiAgICAgICAgc2VsZWN0ZWRTaGFwZVJlZixcclxuICAgICAgICBzaGFwZVJlZixcclxuICAgICAgICBzeW5jU2hhcGVJblN0b3JhZ2UsXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBsaXN0ZW4gdG8gdGhlIG1vdXNlIHVwIGV2ZW50IG9uIHRoZSBjYW52YXMgd2hpY2ggaXMgZmlyZWQgd2hlbiB0aGVcclxuICAgICAqIHVzZXIgcmVsZWFzZXMgdGhlIG1vdXNlIG9uIHRoZSBjYW52YXNcclxuICAgICAqXHJcbiAgICAgKiBFdmVudCBpbnNwZWN0b3I6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZXZlbnRzXHJcbiAgICAgKiBFdmVudCBsaXN0OiBodHRwOi8vZmFicmljanMuY29tL2RvY3MvZmFicmljLkNhbnZhcy5odG1sI2ZpcmVcclxuICAgICAqL1xyXG4gICAgY2FudmFzLm9uKFwibW91c2U6dXBcIiwgKCkgPT4ge1xyXG4gICAgICBoYW5kbGVDYW52YXNNb3VzZVVwKHtcclxuICAgICAgICBjYW52YXMsXHJcbiAgICAgICAgaXNEcmF3aW5nLFxyXG4gICAgICAgIHNoYXBlUmVmLFxyXG4gICAgICAgIGFjdGl2ZU9iamVjdFJlZixcclxuICAgICAgICBzZWxlY3RlZFNoYXBlUmVmLFxyXG4gICAgICAgIHN5bmNTaGFwZUluU3RvcmFnZSxcclxuICAgICAgICBzZXRBY3RpdmVFbGVtZW50LFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogbGlzdGVuIHRvIHRoZSBwYXRoIGNyZWF0ZWQgZXZlbnQgb24gdGhlIGNhbnZhcyB3aGljaCBpcyBmaXJlZCB3aGVuXHJcbiAgICAgKiB0aGUgdXNlciBjcmVhdGVzIGEgcGF0aCBvbiB0aGUgY2FudmFzIHVzaW5nIHRoZSBmcmVlZm9ybSBkcmF3aW5nXHJcbiAgICAgKiBtb2RlXHJcbiAgICAgKlxyXG4gICAgICogRXZlbnQgaW5zcGVjdG9yOiBodHRwOi8vZmFicmljanMuY29tL2V2ZW50c1xyXG4gICAgICogRXZlbnQgbGlzdDogaHR0cDovL2ZhYnJpY2pzLmNvbS9kb2NzL2ZhYnJpYy5DYW52YXMuaHRtbCNmaXJlXHJcbiAgICAgKi9cclxuICAgIGNhbnZhcy5vbihcInBhdGg6Y3JlYXRlZFwiLCAob3B0aW9ucykgPT4ge1xyXG4gICAgICBoYW5kbGVQYXRoQ3JlYXRlZCh7XHJcbiAgICAgICAgb3B0aW9ucyxcclxuICAgICAgICBzeW5jU2hhcGVJblN0b3JhZ2UsXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBsaXN0ZW4gdG8gdGhlIG9iamVjdCBtb2RpZmllZCBldmVudCBvbiB0aGUgY2FudmFzIHdoaWNoIGlzIGZpcmVkXHJcbiAgICAgKiB3aGVuIHRoZSB1c2VyIG1vZGlmaWVzIGFuIG9iamVjdCBvbiB0aGUgY2FudmFzLiBCYXNpY2FsbHksIHdoZW4gdGhlXHJcbiAgICAgKiB1c2VyIGNoYW5nZXMgdGhlIHdpZHRoLCBoZWlnaHQsIGNvbG9yIGV0YyBwcm9wZXJ0aWVzL2F0dHJpYnV0ZXMgb2ZcclxuICAgICAqIHRoZSBvYmplY3Qgb3IgbW92ZXMgdGhlIG9iamVjdCBvbiB0aGUgY2FudmFzLlxyXG4gICAgICpcclxuICAgICAqIEV2ZW50IGluc3BlY3RvcjogaHR0cDovL2ZhYnJpY2pzLmNvbS9ldmVudHNcclxuICAgICAqIEV2ZW50IGxpc3Q6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZG9jcy9mYWJyaWMuQ2FudmFzLmh0bWwjZmlyZVxyXG4gICAgICovXHJcbiAgICBjYW52YXMub24oXCJvYmplY3Q6bW9kaWZpZWRcIiwgKG9wdGlvbnMpID0+IHtcclxuICAgICAgaGFuZGxlQ2FudmFzT2JqZWN0TW9kaWZpZWQoe1xyXG4gICAgICAgIG9wdGlvbnMsXHJcbiAgICAgICAgc3luY1NoYXBlSW5TdG9yYWdlLFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogbGlzdGVuIHRvIHRoZSBvYmplY3QgbW92aW5nIGV2ZW50IG9uIHRoZSBjYW52YXMgd2hpY2ggaXMgZmlyZWRcclxuICAgICAqIHdoZW4gdGhlIHVzZXIgbW92ZXMgYW4gb2JqZWN0IG9uIHRoZSBjYW52YXMuXHJcbiAgICAgKlxyXG4gICAgICogRXZlbnQgaW5zcGVjdG9yOiBodHRwOi8vZmFicmljanMuY29tL2V2ZW50c1xyXG4gICAgICogRXZlbnQgbGlzdDogaHR0cDovL2ZhYnJpY2pzLmNvbS9kb2NzL2ZhYnJpYy5DYW52YXMuaHRtbCNmaXJlXHJcbiAgICAgKi9cclxuICAgIGNhbnZhcz8ub24oXCJvYmplY3Q6bW92aW5nXCIsIChvcHRpb25zKSA9PiB7XHJcbiAgICAgIGhhbmRsZUNhbnZhc09iamVjdE1vdmluZyh7XHJcbiAgICAgICAgb3B0aW9ucyxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGxpc3RlbiB0byB0aGUgc2VsZWN0aW9uIGNyZWF0ZWQgZXZlbnQgb24gdGhlIGNhbnZhcyB3aGljaCBpcyBmaXJlZFxyXG4gICAgICogd2hlbiB0aGUgdXNlciBzZWxlY3RzIGFuIG9iamVjdCBvbiB0aGUgY2FudmFzLlxyXG4gICAgICpcclxuICAgICAqIEV2ZW50IGluc3BlY3RvcjogaHR0cDovL2ZhYnJpY2pzLmNvbS9ldmVudHNcclxuICAgICAqIEV2ZW50IGxpc3Q6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZG9jcy9mYWJyaWMuQ2FudmFzLmh0bWwjZmlyZVxyXG4gICAgICovXHJcbiAgICBjYW52YXMub24oXCJzZWxlY3Rpb246Y3JlYXRlZFwiLCAob3B0aW9ucykgPT4ge1xyXG4gICAgICBoYW5kbGVDYW52YXNTZWxlY3Rpb25DcmVhdGVkKHtcclxuICAgICAgICBvcHRpb25zLFxyXG4gICAgICAgIGlzRWRpdGluZ1JlZixcclxuICAgICAgICBzZXRFbGVtZW50QXR0cmlidXRlcyxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGxpc3RlbiB0byB0aGUgc2NhbGluZyBldmVudCBvbiB0aGUgY2FudmFzIHdoaWNoIGlzIGZpcmVkIHdoZW4gdGhlXHJcbiAgICAgKiB1c2VyIHNjYWxlcyBhbiBvYmplY3Qgb24gdGhlIGNhbnZhcy5cclxuICAgICAqXHJcbiAgICAgKiBFdmVudCBpbnNwZWN0b3I6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZXZlbnRzXHJcbiAgICAgKiBFdmVudCBsaXN0OiBodHRwOi8vZmFicmljanMuY29tL2RvY3MvZmFicmljLkNhbnZhcy5odG1sI2ZpcmVcclxuICAgICAqL1xyXG4gICAgY2FudmFzLm9uKFwib2JqZWN0OnNjYWxpbmdcIiwgKG9wdGlvbnMpID0+IHtcclxuICAgICAgaGFuZGxlQ2FudmFzT2JqZWN0U2NhbGluZyh7XHJcbiAgICAgICAgb3B0aW9ucyxcclxuICAgICAgICBzZXRFbGVtZW50QXR0cmlidXRlcyxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGxpc3RlbiB0byB0aGUgbW91c2Ugd2hlZWwgZXZlbnQgb24gdGhlIGNhbnZhcyB3aGljaCBpcyBmaXJlZCB3aGVuXHJcbiAgICAgKiB0aGUgdXNlciBzY3JvbGxzIHRoZSBtb3VzZSB3aGVlbCBvbiB0aGUgY2FudmFzLlxyXG4gICAgICpcclxuICAgICAqIEV2ZW50IGluc3BlY3RvcjogaHR0cDovL2ZhYnJpY2pzLmNvbS9ldmVudHNcclxuICAgICAqIEV2ZW50IGxpc3Q6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZG9jcy9mYWJyaWMuQ2FudmFzLmh0bWwjZmlyZVxyXG4gICAgICovXHJcbiAgICBjYW52YXMub24oXCJtb3VzZTp3aGVlbFwiLCAob3B0aW9ucykgPT4ge1xyXG4gICAgICBoYW5kbGVDYW52YXNab29tKHtcclxuICAgICAgICBvcHRpb25zLFxyXG4gICAgICAgIGNhbnZhcyxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGxpc3RlbiB0byB0aGUgcmVzaXplIGV2ZW50IG9uIHRoZSB3aW5kb3cgd2hpY2ggaXMgZmlyZWQgd2hlbiB0aGVcclxuICAgICAqIHVzZXIgcmVzaXplcyB0aGUgd2luZG93LlxyXG4gICAgICpcclxuICAgICAqIFdlJ3JlIHVzaW5nIHRoaXMgdG8gcmVzaXplIHRoZSBjYW52YXMgd2hlbiB0aGUgdXNlciByZXNpemVzIHRoZVxyXG4gICAgICogd2luZG93LlxyXG4gICAgICovXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiB7XHJcbiAgICAgIGhhbmRsZVJlc2l6ZSh7XHJcbiAgICAgICAgY2FudmFzOiBmYWJyaWNSZWYuY3VycmVudCxcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIGxpc3RlbiB0byB0aGUga2V5IGRvd24gZXZlbnQgb24gdGhlIHdpbmRvdyB3aGljaCBpcyBmaXJlZCB3aGVuIHRoZVxyXG4gICAgICogdXNlciBwcmVzc2VzIGEga2V5IG9uIHRoZSBrZXlib2FyZC5cclxuICAgICAqXHJcbiAgICAgKiBXZSdyZSB1c2luZyB0aGlzIHRvIHBlcmZvcm0gc29tZSBhY3Rpb25zIGxpa2UgZGVsZXRlLCBjb3B5LCBwYXN0ZSwgZXRjIHdoZW4gdGhlIHVzZXIgcHJlc3NlcyB0aGUgcmVzcGVjdGl2ZSBrZXlzIG9uIHRoZSBrZXlib2FyZC5cclxuICAgICAqL1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChlKSA9PlxyXG4gICAgICBoYW5kbGVLZXlEb3duKHtcclxuICAgICAgICBlLFxyXG4gICAgICAgIGNhbnZhczogZmFicmljUmVmLmN1cnJlbnQsXHJcbiAgICAgICAgdW5kbyxcclxuICAgICAgICByZWRvLFxyXG4gICAgICAgIHN5bmNTaGFwZUluU3RvcmFnZSxcclxuICAgICAgICBkZWxldGVTaGFwZUZyb21TdG9yYWdlLFxyXG4gICAgICB9KVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBkaXNwb3NlIHRoZSBjYW52YXMgYW5kIHJlbW92ZSB0aGUgZXZlbnQgbGlzdGVuZXJzIHdoZW4gdGhlIGNvbXBvbmVudCB1bm1vdW50c1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgLyoqXHJcbiAgICAgICAqIGRpc3Bvc2UgaXMgYSBtZXRob2QgcHJvdmlkZWQgYnkgRmFicmljIHRoYXQgYWxsb3dzIHlvdSB0byBkaXNwb3NlXHJcbiAgICAgICAqIHRoZSBjYW52YXMuIEl0IGNsZWFycyB0aGUgY2FudmFzIGFuZCByZW1vdmVzIGFsbCB0aGUgZXZlbnRcclxuICAgICAgICogbGlzdGVuZXJzXHJcbiAgICAgICAqXHJcbiAgICAgICAqIGRpc3Bvc2U6IGh0dHA6Ly9mYWJyaWNqcy5jb20vZG9jcy9mYWJyaWMuQ2FudmFzLmh0bWwjZGlzcG9zZVxyXG4gICAgICAgKi9cclxuICAgICAgY2FudmFzLmRpc3Bvc2UoKTtcclxuXHJcbiAgICAgIC8vIHJlbW92ZSB0aGUgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHtcclxuICAgICAgICBoYW5kbGVSZXNpemUoe1xyXG4gICAgICAgICAgY2FudmFzOiBudWxsLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT5cclxuICAgICAgICBoYW5kbGVLZXlEb3duKHtcclxuICAgICAgICAgIGUsXHJcbiAgICAgICAgICBjYW52YXM6IGZhYnJpY1JlZi5jdXJyZW50LFxyXG4gICAgICAgICAgdW5kbyxcclxuICAgICAgICAgIHJlZG8sXHJcbiAgICAgICAgICBzeW5jU2hhcGVJblN0b3JhZ2UsXHJcbiAgICAgICAgICBkZWxldGVTaGFwZUZyb21TdG9yYWdlLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG4gIH0sIFtjYW52YXNSZWZdKTsgLy8gcnVuIHRoaXMgZWZmZWN0IG9ubHkgb25jZSB3aGVuIHRoZSBjb21wb25lbnQgbW91bnRzIGFuZCB0aGUgY2FudmFzUmVmIGNoYW5nZXNcclxuXHJcbiAgLy8gcmVuZGVyIHRoZSBjYW52YXMgd2hlbiB0aGUgY2FudmFzT2JqZWN0cyBmcm9tIGxpdmUgc3RvcmFnZSBjaGFuZ2VzXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHJlbmRlckNhbnZhcyh7XHJcbiAgICAgIGZhYnJpY1JlZixcclxuICAgICAgY2FudmFzT2JqZWN0cyxcclxuICAgICAgYWN0aXZlT2JqZWN0UmVmLFxyXG4gICAgfSk7XHJcbiAgfSwgW2NhbnZhc09iamVjdHNdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxtYWluIGNsYXNzTmFtZT0naC1zY3JlZW4gb3ZlcmZsb3ctaGlkZGVuJz5cclxuICAgICAgPE5hdmJhclxyXG4gICAgICAgIGltYWdlSW5wdXRSZWY9e2ltYWdlSW5wdXRSZWZ9XHJcbiAgICAgICAgYWN0aXZlRWxlbWVudD17YWN0aXZlRWxlbWVudH1cclxuICAgICAgICBoYW5kbGVJbWFnZVVwbG9hZD17KGU6IGFueSkgPT4ge1xyXG4gICAgICAgICAgLy8gcHJldmVudCB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiB0aGUgaW5wdXQgZWxlbWVudFxyXG4gICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAgICAgICBoYW5kbGVJbWFnZVVwbG9hZCh7XHJcbiAgICAgICAgICAgIGZpbGU6IGUudGFyZ2V0LmZpbGVzWzBdLFxyXG4gICAgICAgICAgICBjYW52YXM6IGZhYnJpY1JlZiBhcyBhbnksXHJcbiAgICAgICAgICAgIHNoYXBlUmVmLFxyXG4gICAgICAgICAgICBzeW5jU2hhcGVJblN0b3JhZ2UsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9fVxyXG4gICAgICAgIGhhbmRsZUFjdGl2ZUVsZW1lbnQ9e2hhbmRsZUFjdGl2ZUVsZW1lbnR9XHJcbiAgICAgIC8+XHJcblxyXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J2ZsZXggaC1mdWxsIGZsZXgtcm93Jz5cclxuICAgICAgICA8TGVmdFNpZGViYXIgYWxsU2hhcGVzPXtBcnJheS5mcm9tKGNhbnZhc09iamVjdHMpfSAvPlxyXG5cclxuICAgICAgICA8TGl2ZSBjYW52YXNSZWY9e2NhbnZhc1JlZn0gdW5kbz17dW5kb30gcmVkbz17cmVkb30gLz5cclxuXHJcbiAgICAgICAgPFJpZ2h0U2lkZWJhclxyXG4gICAgICAgICAgZWxlbWVudEF0dHJpYnV0ZXM9e2VsZW1lbnRBdHRyaWJ1dGVzfVxyXG4gICAgICAgICAgc2V0RWxlbWVudEF0dHJpYnV0ZXM9e3NldEVsZW1lbnRBdHRyaWJ1dGVzfVxyXG4gICAgICAgICAgZmFicmljUmVmPXtmYWJyaWNSZWZ9XHJcbiAgICAgICAgICBpc0VkaXRpbmdSZWY9e2lzRWRpdGluZ1JlZn1cclxuICAgICAgICAgIGFjdGl2ZU9iamVjdFJlZj17YWN0aXZlT2JqZWN0UmVmfVxyXG4gICAgICAgICAgc3luY1NoYXBlSW5TdG9yYWdlPXtzeW5jU2hhcGVJblN0b3JhZ2V9XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9zZWN0aW9uPlxyXG4gICAgPC9tYWluPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIb21lO1xyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VNdXRhdGlvbiIsInVzZVJlZG8iLCJ1c2VTdG9yYWdlIiwidXNlVW5kbyIsImhhbmRsZUNhbnZhc2VNb3VzZU1vdmUiLCJoYW5kbGVDYW52YXNNb3VzZURvd24iLCJoYW5kbGVDYW52YXNNb3VzZVVwIiwiaGFuZGxlQ2FudmFzT2JqZWN0TW9kaWZpZWQiLCJoYW5kbGVDYW52YXNPYmplY3RNb3ZpbmciLCJoYW5kbGVDYW52YXNPYmplY3RTY2FsaW5nIiwiaGFuZGxlQ2FudmFzU2VsZWN0aW9uQ3JlYXRlZCIsImhhbmRsZUNhbnZhc1pvb20iLCJoYW5kbGVQYXRoQ3JlYXRlZCIsImhhbmRsZVJlc2l6ZSIsImluaXRpYWxpemVGYWJyaWMiLCJyZW5kZXJDYW52YXMiLCJoYW5kbGVEZWxldGUiLCJoYW5kbGVLZXlEb3duIiwiUmlnaHRTaWRlYmFyIiwiaGFuZGxlSW1hZ2VVcGxvYWQiLCJkZWZhdWx0TmF2RWxlbWVudCIsIkhvbWUiLCJ1bmRvIiwicmVkbyIsImNhbnZhc09iamVjdHMiLCJyb290IiwiY2FudmFzUmVmIiwiZmFicmljUmVmIiwiaXNEcmF3aW5nIiwic2hhcGVSZWYiLCJzZWxlY3RlZFNoYXBlUmVmIiwiYWN0aXZlT2JqZWN0UmVmIiwiaXNFZGl0aW5nUmVmIiwiaW1hZ2VJbnB1dFJlZiIsImFjdGl2ZUVsZW1lbnQiLCJzZXRBY3RpdmVFbGVtZW50IiwibmFtZSIsInZhbHVlIiwiaWNvbiIsImVsZW1lbnRBdHRyaWJ1dGVzIiwic2V0RWxlbWVudEF0dHJpYnV0ZXMiLCJ3aWR0aCIsImhlaWdodCIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJmaWxsIiwic3Ryb2tlIiwiZGVsZXRlU2hhcGVGcm9tU3RvcmFnZSIsInNoYXBlSWQiLCJzdG9yYWdlIiwiZ2V0IiwiZGVsZXRlIiwiZGVsZXRlQWxsU2hhcGVzIiwic2l6ZSIsImtleSIsImVudHJpZXMiLCJzeW5jU2hhcGVJblN0b3JhZ2UiLCJvYmplY3QiLCJvYmplY3RJZCIsInNoYXBlRGF0YSIsInRvSlNPTiIsInNldCIsImhhbmRsZUFjdGl2ZUVsZW1lbnQiLCJlbGVtIiwiY3VycmVudCIsImNsZWFyIiwiY2xpY2siLCJpc0RyYXdpbmdNb2RlIiwiY2FudmFzIiwib24iLCJvcHRpb25zIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJkaXNwb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1haW4iLCJjbGFzc05hbWUiLCJOYXZiYXIiLCJzdG9wUHJvcGFnYXRpb24iLCJmaWxlIiwidGFyZ2V0IiwiZmlsZXMiLCJzZWN0aW9uIiwiTGVmdFNpZGViYXIiLCJhbGxTaGFwZXMiLCJBcnJheSIsImZyb20iLCJMaXZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/App.tsx\n"));

/***/ })

});